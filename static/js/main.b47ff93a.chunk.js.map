{"version":3,"sources":["components/common/AboutModal.js","components/common/Header.js","data/DataContext.js","components/map/DataOverlay.js","util/covid_api.js","components/map/MapManager.js","components/map/Marker.js","App.js","serviceWorker.js","index.js"],"names":["AboutModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","href","Footer","Button","onClick","onHide","useState","modalShow","setModalShow","Navbar","bg","variant","Brand","Nav","className","Link","show","DataContext","React","createContext","countriesJson","countriesDensity","countriesCovid","DataOverlay","state","haveData","hide","setState","newProps","this","country","getData","data","infected","tested","recovered","deceased","callback","world","context","console","log","countryObj","filter","showCovidData","Component","contextType","getWorldData","a","fetch","dataReq","json","error","countriesData","require","MapManager","showDataDetails","undefined","windowH","window","innerHeight","style","height","width","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","map","maps","Object","entries","countries","lat","lng","Marker","position","title","addListener","renderMarker","Number","latitude","longitude","name","defaultProps","App","then","Provider","value","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b47ff93a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nfunction AboutModal(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">PREMAP</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4>What is this project about?</h4>\r\n        <br />\r\n        <h5>\r\n          {\" \"}\r\n          Have you thought about predicting the future and what could this\r\n          change?{\" \"}\r\n        </h5>\r\n        <p>\r\n          We are PREMAP, a web platform dedicated to predicting new foci for the\r\n          advancement of COVID-19, we use demographic data, geolocalized\r\n          infection history series and CO2 emission data , which shows us urban\r\n          agglomerations in real time. The data are cross-checked and with the\r\n          use of artificial intelligence, new sources of dissemination can be\r\n          predicted, helping governments and organizations to reduce the\r\n          proliferation of the disease. So, are you going to launch with us?\r\n        </p>\r\n\r\n        <h4>Our Team</h4>\r\n        <br />\r\n        <h5>Alex Mendonça</h5>\r\n        <h6>\r\n          Control and Automation Engineer, graduated at UTFPR in Curitiba, acts\r\n          as software develpment engineer.{\" \"}\r\n        </h6>\r\n        <p>\r\n          Linkedin:{\" \"}\r\n          <a href=\"https://www.linkedin.com/in/mendoncaalex/\">\r\n            https://www.linkedin.com/in/mendoncaalex/\r\n          </a>\r\n          <br />\r\n          E-mail:{\" \"}\r\n          <a href=\"mailto:alextorezin@gmail.com\">alextorezin@gmail.com</a>\r\n        </p>\r\n        <h5>Ton Freitas</h5>\r\n        <h6>UX Designer. </h6>\r\n        <p>\r\n          Linkedin:{\" \"}\r\n          <a href=\"https://www.linkedin.com/in/ton-freitas\">\r\n            https://www.linkedin.com/in/ton-freitas\r\n          </a>\r\n          <br />\r\n          E-mail:{\" \"}\r\n          <a href=\"mailto:ton.algo.freitas@gmail.com\">\r\n            ton.algo.freitas@gmail.com\r\n          </a>\r\n        </p>\r\n        <h5>Carlos Eduardo de Latorre Santos Correia</h5>\r\n        <h6>High School student, graduating in Industrial Mechanics. </h6>\r\n        <p>\r\n          Linkedin:{\" \"}\r\n          <a href=\"https://www.linkedin.com/in/dudu-de-a746081ab/<\">\r\n            https://www.linkedin.com/in/dudu-de-a746081ab/\r\n          </a>\r\n          <br />\r\n          E-mail:{\" \"}\r\n          <a href=\"mailto:delatorredudu3@gmail.com\">delatorredudu3@gmail.com</a>\r\n        </p>\r\n        <h5>Tales Lopes Ramos</h5>\r\n        <h6>Fullstack Developer, graduating at UFMG in Belo Horizonte. </h6>\r\n        <p>\r\n          Linkedin:{\" \"}\r\n          <a href=\"https://www.linkedin.com/in/tales-l-ramos/\">\r\n            https://www.linkedin.com/in/tales-l-ramos/\r\n          </a>\r\n          <br />\r\n          E-mail:{\" \"}\r\n          <a href=\"mailto:taleslopesramos@gmail.com\">\r\n            taleslopesramos@gmail.com\r\n          </a>\r\n        </p>\r\n        <h5>Caio César Silva</h5>\r\n        <h6>Front-end Developer, graduating at UFMG in Belo Horizonte. </h6>\r\n        <p>\r\n          Linkedin:{\" \"}\r\n          <a href=\"https://www.linkedin.com/in/caio-c%C3%A9sar-silva-1aa8b7101/\">\r\n            https://www.linkedin.com/in/caio-c%C3%A9sar-silva-1aa8b7101/\r\n          </a>\r\n          <br />\r\n          E-mail:{\" \"}\r\n          <a href=\"mailto:caiocesarsilva08@gmail.com\">\r\n            caiocesarsilva08@gmail.com\r\n          </a>\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AboutModal;\r\n","import React, { useState } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport AboutModal from \"./AboutModal\";\r\n\r\nfunction Header() {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/plague-spotter\">PREMAP</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link onClick={() => setModalShow(true)}>About</Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n\r\n      <AboutModal show={modalShow} onHide={() => setModalShow(false)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst DataContext = React.createContext({\r\n    countriesJson:{},\r\n    countriesDensity:{},\r\n    countriesCovid:{}\r\n})\r\n\r\nexport default DataContext;","import React, { Component } from \"react\";\r\nimport \"./DataOverlay.css\";\r\n// import { getWorldData } from \"../../util/covid_api\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DataContext from '../../data/DataContext'\r\n\r\nexport class DataOverlay extends Component {\r\n  static contextType = DataContext\r\n  state = {\r\n    show: false,\r\n    haveData: true,\r\n  };\r\n  hide = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.show !== this.state.show) {\r\n      this.setState({ show: newProps.show, country: newProps.country });\r\n      this.getData(newProps.country, (data) => {\r\n        if (data === false) return;\r\n\r\n        let { infected, tested, recovered, deceased } = data;\r\n\r\n        this.setState({\r\n          show: newProps.show,\r\n          country: newProps.country,\r\n          infected,\r\n          tested,\r\n          recovered,\r\n          deceased,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  getData(country, callback) {\r\n    let world = this.context.countriesCovid;\r\n    console.log(world)\r\n    \r\n    let countryObj = world.filter((data) => data.country === country)[0];\r\n\r\n    if (!countryObj) {\r\n      this.setState({ haveData: false });\r\n    } else {\r\n      this.setState({ haveData: true });\r\n    }\r\n\r\n    if (countryObj) callback(countryObj);\r\n  }\r\n\r\n  showCovidData() {\r\n    if (this.state.haveData) {\r\n      return (\r\n        <div className=\"data-body\">\r\n          <div>Tested: </div>\r\n          <div>{this.state.tested}</div>\r\n          <div>Infected: </div>\r\n          <div>{this.state.infected}</div>\r\n          <div>Deaths: </div>\r\n          <div>{this.state.deceased}</div>\r\n          <div>Recovered: </div>\r\n          <div>{this.state.recovered}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"ml-3\">\r\n          <p>Sorry, we still don't have this data. :(</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let show = this.state.show;\r\n\r\n    if (show) {\r\n      return (\r\n        <div className=\"data-wrapper\">\r\n          <div className=\"data-container\">\r\n            <div className=\"data-header\">\r\n              <h1> Covid-19 data in {this.state.country} </h1>\r\n            </div>\r\n\r\n            {this.showCovidData()}\r\n\r\n            <div className=\"data-footer\">\r\n              <Button onClick={this.hide}>Exit</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n}\r\n\r\nexport default DataOverlay;\r\n","\r\n\r\nexport const getWorldData = async (callback) => {\r\n    try{\r\n        const dataReq = await fetch(\"https://api.apify.com/v2/key-value-stores/tVaYRsPHLjNdNBu7S/records/LATEST?disableRedirect=true\")\r\n        const json = await dataReq.json()\r\n\r\n        return json\r\n    }\r\n    catch(err){\r\n        console.error(err)\r\n        return false\r\n    }\r\n}\r\n\r\nexport const getCountryData = async (countryDataObj) => {\r\n    try{\r\n        const apiURL = countryDataObj.moreData\r\n        const dataReq = await fetch(apiURL)\r\n        const json = await dataReq.json()\r\n        \r\n        return json\r\n    }\r\n    catch(err){\r\n        console.error(err)\r\n        return false\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport renderMarker from \"./Marker\";\r\nimport DataOverlay from \"./DataOverlay.js\";\r\nimport { getWorldData } from \"../../util/covid_api\";\r\n\r\nvar countriesData = require(\"../../data/countries.json\");\r\nconst API_KEY = \"AIzaSyDEZBGmstNOX29tWnSVv_Auy3U-mRgmAfY\";\r\n\r\nclass MapManager extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: -15.76972,\r\n      lng: -47.92972,\r\n    },\r\n    zoom: 0,\r\n    countriesData: countriesData.countries[0],\r\n  };\r\n\r\n  state = {\r\n    showDataDetails: false,\r\n    country: undefined,\r\n  };\r\n\r\n  showDataDetails = (country) => {\r\n    this.setState({\r\n      showDataDetails: true,\r\n      country,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const windowH = window.innerHeight -56\r\n    return (\r\n      <div style={{ height: windowH, width: \"100%\" }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: API_KEY }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n          yesIWantToUseGoogleMapApiInternals={true}\r\n          onGoogleApiLoaded={({ map, maps }) =>\r\n            Object.entries(this.props.countriesData).map((country) => {\r\n              let countries = country[1];\r\n              renderMarker(\r\n                map,\r\n                maps,\r\n                Number(countries.latitude),\r\n                Number(countries.longitude),\r\n                countries.name,\r\n                this.showDataDetails\r\n              );\r\n            })\r\n          }\r\n        />\r\n\r\n        <DataOverlay\r\n          show={this.state.showDataDetails}\r\n          country={this.state.country}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MapManager;\r\n","export default function renderMarker(map, maps, lat, lng, country, callback) {\r\n  let marker = new maps.Marker({\r\n    position: {\r\n      lat,\r\n      lng,\r\n    },\r\n    map,\r\n    title: country,\r\n  });\r\n  //marker.addListener(\"click\", () => callback(country));\r\n  marker.addListener(\"click\", () => callback(country));\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/common/Header\";\r\nimport DataContext from \"./data/DataContext\";\r\nimport MapManager from \"./components/map/MapManager\";\r\nimport { getWorldData } from \"./util/covid_api\";\r\nimport countries from \"./data/countries.json\";\r\nimport countriesDensity from \"./data/country-by-population-density.json\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    countriesJson: {},\r\n    countriesDensity: {},\r\n    countriesCovid: {},\r\n  };\r\n\r\n  componentWillMount() {\r\n    getWorldData().then((json) => {\r\n      this.setState({\r\n        countriesJson: countries,\r\n        countriesDensity: countriesDensity,\r\n        countriesCovid: json,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DataContext.Provider value={this.state}>\r\n        <div style={{ height: \"100vh\" }}>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={MapManager} />\r\n            <Route exact path=\"/map\" component={MapManager} />\r\n            <Route exact path=\"/plague-spotter\" component={MapManager} />\r\n          </Switch>\r\n        </div>\r\n      </DataContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}